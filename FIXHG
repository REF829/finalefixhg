-- Services
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local KEY_CODE = "free_296"
local unlocked = false

-- ‚ö° Show "Naze Library" Splash
do
	local splashGui = Instance.new("ScreenGui")
	splashGui.Name = "NazeSplash"
	splashGui.Parent = playerGui
	splashGui.ResetOnSpawn = false

	local splashText = Instance.new("TextLabel")
	splashText.Size = UDim2.new(1, 0, 1, 0)
	splashText.BackgroundTransparency = 1
	splashText.Text = "Naze Library"
	splashText.TextColor3 = Color3.new(1, 1, 1)
	splashText.TextStrokeTransparency = 0
	splashText.TextScaled = true
	splashText.Font = Enum.Font.GothamBold
	splashText.Parent = splashGui

	task.wait(3)
	splashGui:Destroy()
end

-- üßº Clean any previous GUIs
local function cleanGui()
	for _, guiName in {"FIXHG_Hub", "FIXHG_KeySystem"} do
		local g = playerGui:FindFirstChild(guiName)
		if g then g:Destroy() end
	end
end

-- üì¶ Main GUI
local function createGui(char)
	cleanGui()
	local hrp = char:WaitForChild("HumanoidRootPart", 5)
	if not hrp then return end

	local FIXHG_GUI = Instance.new("ScreenGui", playerGui)
	FIXHG_GUI.Name = "FIXHG_Hub"
	FIXHG_GUI.ResetOnSpawn = false

	local Frame = Instance.new("Frame", FIXHG_GUI)
	Frame.Size = UDim2.new(0, 350, 0, 270)
	Frame.Position = UDim2.new(0.5, 0, 0.35, 0)
	Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
	Frame.BorderSizePixel = 0
	Frame.Active = true
	Frame.Draggable = true

	local Title = Instance.new("TextLabel", Frame)
	Title.Size = UDim2.new(1, 0, 0, 45)
	Title.BackgroundColor3 = Color3.fromRGB(15, 15, 30)
	Title.BorderSizePixel = 0
	Title.Text = "FIXHG Hub"
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 24
	Title.TextColor3 = Color3.fromRGB(200, 200, 255)

	-- Toggle button creator
	local function createToggle(name, posY, initState, stateCallback)
		local btn = Instance.new("TextButton", Frame)
		btn.Size = UDim2.new(0.8, 0, 0, 35)
		btn.Position = UDim2.new(0.1, 0, 0, posY)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 16
		btn.Text = (initState and "[ ON  ] " or "[ OFF ] ") .. name

		local toggled = initState
		btn.MouseButton1Click:Connect(function()
			toggled = not toggled
			btn.Text = (toggled and "[ ON  ] " or "[ OFF ] ") .. name
			stateCallback(toggled)
		end)
	end

	-- üí® Fly
	local flyEnabled, flyVelocity
	local function updateFly(toggle)
		flyEnabled = toggle
		if toggle then
			flyVelocity = Instance.new("BodyVelocity", hrp)
			flyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
			flyVelocity.Name = "FIXHGFly"

			RunService:BindToRenderStep("FIXHGFly", Enum.RenderPriority.Input.Value, function()
				if not flyEnabled then return end
				local cam = workspace.CurrentCamera
				local move = Vector3.zero
				if UIS:IsKeyDown(Enum.KeyCode.W) then move += cam.CFrame.LookVector end
				if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cam.CFrame.LookVector end
				if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cam.CFrame.RightVector end
				if UIS:IsKeyDown(Enum.KeyCode.D) then move += cam.CFrame.RightVector end
				flyVelocity.Velocity = move.Magnitude > 0 and move.Unit * 60 or Vector3.zero
			end)
		else
			if flyVelocity then flyVelocity:Destroy() flyVelocity = nil end
			RunService:UnbindFromRenderStep("FIXHGFly")
		end
	end

	-- ü™Ç Infinite Jump
	local jumpConn1, jumpConn2, jumping = nil, nil, false
	local function updateInfJump(toggle)
		if toggle then
			jumpConn1 = UIS.InputBegan:Connect(function(input, gpe)
				if input.KeyCode == Enum.KeyCode.Space and not gpe and not jumping then
					jumping = true
					local hum = char:FindFirstChildOfClass("Humanoid")
					if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
				end
			end)
			jumpConn2 = UIS.InputEnded:Connect(function(input)
				if input.KeyCode == Enum.KeyCode.Space then jumping = false end
			end)
		else
			if jumpConn1 then jumpConn1:Disconnect() end
			if jumpConn2 then jumpConn2:Disconnect() end
			jumping = false
		end
	end

	-- üåÄ Fling
	local function updateFling(toggle)
		if toggle then
			local fling = Instance.new("BodyAngularVelocity", hrp)
			fling.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
			fling.AngularVelocity = Vector3.new(0, 100, 0)
			fling.Name = "FIXHGFling"
		else
			local fling = hrp:FindFirstChild("FIXHGFling")
			if fling then fling:Destroy() end
		end
	end

	-- üëÅÔ∏è ESP
	local function updateESP(toggle)
		for _, p in pairs(Players:GetPlayers()) do
			if p ~= player and p.Character and p.Character:FindFirstChild("Head") then
				local head = p.Character.Head
				if toggle and not head:FindFirstChild("FIXHG_ESP") then
					local esp = Instance.new("BillboardGui", head)
					esp.Name = "FIXHG_ESP"
					esp.Size = UDim2.new(0, 100, 0, 40)
					esp.Adornee = head
					esp.AlwaysOnTop = true

					local label = Instance.new("TextLabel", esp)
					label.Size = UDim2.new(1, 0, 1, 0)
					label.Text = p.Name
					label.BackgroundTransparency = 1
					label.TextColor3 = Color3.fromRGB(255, 0, 0)
					label.Font = Enum.Font.GothamBold
					label.TextScaled = true
				elseif not toggle then
					local esp = head:FindFirstChild("FIXHG_ESP")
					if esp then esp:Destroy() end
				end
			end
		end
	end

	createToggle("Fly", 60, false, updateFly)
	createToggle("Infinite Jump", 110, false, updateInfJump)
	createToggle("ESP", 160, false, updateESP)
	createToggle("Fling", 210, false, updateFling)
end

-- üîë Key GUI
local function createKeyGui()
	cleanGui()

	local gui = Instance.new("ScreenGui", playerGui)
	gui.Name = "FIXHG_KeySystem"
	gui.ResetOnSpawn = false

	local frame = Instance.new("Frame", gui)
	frame.Size = UDim2.new(0, 350, 0, 150)
	frame.Position = UDim2.new(0.5, 0, 0.4, 0)
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.Draggable = true

	local title = Instance.new("TextLabel", frame)
	title.Size = UDim2.new(1, 0, 0, 45)
	title.Text = "Enter Key to Access FIXHG Hub"
	title.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
	title.BorderSizePixel = 0
	title.TextSize = 22
	title.Font = Enum.Font.GothamBold
	title.TextColor3 = Color3.fromRGB(180, 180, 255)

	local textbox = Instance.new("TextBox", frame)
	textbox.Size = UDim2.new(0.8, 0, 0, 40)
	textbox.Position = UDim2.new(0.1, 0, 0, 60)
	textbox.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
	textbox.TextColor3 = Color3.fromRGB(230, 230, 255)
	textbox.Font = Enum.Font.Gotham
	textbox.TextSize = 20
	textbox.PlaceholderText = "Example: free_123"
	textbox.ClearTextOnFocus = false
	textbox.Text = ""

	local status = Instance.new("TextLabel", frame)
	status.Size = UDim2.new(1, 0, 0, 30)
	status.Position = UDim2.new(0, 0, 0, 110)
	status.BackgroundTransparency = 1
	status.TextColor3 = Color3.fromRGB(255, 100, 100)
	status.Font = Enum.Font.Gotham
	status.TextSize = 18
	status.Text = ""

	local function checkKey(input)
		if input:lower() == KEY_CODE then
			unlocked = true
			status.TextColor3 = Color3.fromRGB(100, 255, 100)
			status.Text = "Key accepted! Loading hub..."
			task.wait(1)
			gui:Destroy()
			if player.Character then createGui(player.Character) end
		else
			status.Text = "Invalid key! Try again."
		end
	end

	textbox.FocusLost:Connect(function(enter)
		if enter then checkKey(textbox.Text) end
	end)
end

-- üîÅ Character hook
local function onCharacter(char)
	task.wait(1)
	if unlocked then
		createGui(char)
	else
		createKeyGui()
	end
end

if player.Character then onCharacter(player.Character) end
player.CharacterAdded:Connect(onCharacter)
